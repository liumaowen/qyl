name: Build Android APK

on:
  workflow_dispatch:
    inputs:
      buildType:
        description: 'Build Type (debug or release)'
        required: true
        default: 'debug'
        type: choice
        options:
          - debug
          - release
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: 安装依赖
        run: npm install

      - name: 构建前端
        run: npm run build

      - name: 安装 Capacitor 依赖
        run: npx cap sync android

      - name: 设置 JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: 检查 gradlew 是否存在
        working-directory: android
        run: ls -l gradlew

      - name: 授权 gradlew
        working-directory: android
        run: chmod +x gradlew

      # 生成调试签名（仅debug构建）
      - name: 生成调试签名
        if: ${{ github.event.inputs.buildType != 'release' }}
        run: |
          mkdir -p ~/.android/
          keytool -genkeypair \
            -alias androiddebugkey \
            -keypass android \
            -storepass android \
            -keyalg RSA \
            -keysize 2048 \
            -validity 10000 \
            -dname "CN=Android Debug,O=Android,C=US" \
            -keystore ~/.android/debug.keystore


      - name: Decode Keystore
        if: ${{ github.event.inputs.buildType == 'release' }}
        env:
          ENCODED_STRING: ${{ secrets.KEYSTORE_BASE64 }}
          SIGNING_KEY_STORE_PATH: ${{ secrets.SIGNING_KEY_STORE_PATH }}

        run: |
          echo $ENCODED_STRING > keystore-b64.txt
          base64 -d keystore-b64.txt > $SIGNING_KEY_STORE_PATH

      - name: Build Release apk
        env:
          SIGNING_KEY_STORE_PATH: ${{ secrets.SIGNING_KEY_STORE_PATH }}
          SIGNING_KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        run: ./gradlew assembleRelease

      # 上传 APK（push 和 debug 都上传 debug 包，只有 release 参数才上传 release 包）
      - name: Upload Release Build to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts
          paths: |
            app/build/outputs/apk/release/
      #4      
      - name: Create Github Release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          prerelease: true
          files: |
            app/build/outputs/apk/release/app-release.apk
